//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShiftDiary.Web.ShiftService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShiftService.IShiftService")]
    public interface IShiftService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/GetAll", ReplyAction="http://tempuri.org/IShiftService/GetAllResponse")]
        ShiftDiary.DTO.Shift[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/GetShift", ReplyAction="http://tempuri.org/IShiftService/GetShiftResponse")]
        ShiftDiary.DTO.Shift GetShift(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/Save", ReplyAction="http://tempuri.org/IShiftService/SaveResponse")]
        void Save(ShiftDiary.DTO.Shift obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/Delete", ReplyAction="http://tempuri.org/IShiftService/DeleteResponse")]
        void Delete(ShiftDiary.DTO.Shift obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/GetShiftForMonth", ReplyAction="http://tempuri.org/IShiftService/GetShiftForMonthResponse")]
        ShiftDiary.DTO.Shift[] GetShiftForMonth(ShiftDiary.DTO.Month month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShiftService/GetShiftForDay", ReplyAction="http://tempuri.org/IShiftService/GetShiftForDayResponse")]
        ShiftDiary.DTO.Shift[] GetShiftForDay(ShiftDiary.DTO.Day day);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShiftServiceChannel : ShiftDiary.Web.ShiftService.IShiftService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShiftServiceClient : System.ServiceModel.ClientBase<ShiftDiary.Web.ShiftService.IShiftService>, ShiftDiary.Web.ShiftService.IShiftService {
        
        public ShiftServiceClient() {
        }
        
        public ShiftServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShiftServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShiftServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShiftServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ShiftDiary.DTO.Shift[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public ShiftDiary.DTO.Shift GetShift(int id) {
            return base.Channel.GetShift(id);
        }
        
        public void Save(ShiftDiary.DTO.Shift obj) {
            base.Channel.Save(obj);
        }
        
        public void Delete(ShiftDiary.DTO.Shift obj) {
            base.Channel.Delete(obj);
        }
        
        public ShiftDiary.DTO.Shift[] GetShiftForMonth(ShiftDiary.DTO.Month month) {
            return base.Channel.GetShiftForMonth(month);
        }
        
        public ShiftDiary.DTO.Shift[] GetShiftForDay(ShiftDiary.DTO.Day day) {
            return base.Channel.GetShiftForDay(day);
        }
    }
}
